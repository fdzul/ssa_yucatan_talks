---
format: 
  revealjs:
    #theme: ["theme/q-theme.scss"]
    slide-number: c/t
    logo: "https://salud.yucatan.gob.mx/files/get/2889?v=1669754780"
    footer: "[github.com/fdzul](https://joyful-palmier-ec5e33.netlify.app/talks/vector_control_schools/#/)"
    center-title-slide: true
highlight-style: a11y
---

<h2>Prevención y Control del Dengue<br>en Escuelas de Mérida Yucatán</h2>

<h2> </h2>

<hr>

<h3> Felipe Dzul Manzanilla </h3><h3>Jorge Palacios</h3> <h3></h3>

<h4> 2023-03-13 </h4>
<br>

<h4> `r fontawesome::fa("github", "black")` &nbsp; [github.com/fdzul](https://fdzul.github.io/web_site_fadm/)


![](chains_merida.jpg){.absolute top=155 left="550" width="750"}


## <span style="color:#003300;">Transmisión del Dengue en México</span>
<hr style="height:2px;border-width:0;color:#330019;background-color:#330019">

:::{.column}

![](graph_paho.jpg){.absolute top=100 width="800" height="550" right=120}

:::

## <span style="color:#003300;">Estados Prioritarios</span>
<hr style="height:2px;border-width:0;color:#330019;background-color:#330019">

```{r}
library(dplyr)
rank_cases <- function(x){
    x |>
        dplyr::arrange(dplyr::desc(value)) |>
        dplyr::mutate(rank = 1:dplyr::n())
}


# Step 1. load the dengue dataset 2008 to 2015 ####
load("~/Library/CloudStorage/OneDrive-Personal/automatic_read_sinave/8.RData/den/den2008_2022.RData")

z <- den2008_2015  |>
    dplyr::filter(!DES_EDO.x %in% c("OTROS PAISES", 
                                      "OTROS PAISES DE LATINOAMERICA",
                                      "ESTADOS UNIDOS DE NORTEAMERICA")) |>
    dplyr::filter(DES_DIAG_FINAL %in% c("FIEBRE HEMORRAGICA POR DENGUE", "FIEBRE POR DENGUE")) |>
    dplyr::group_by(DES_EDO.x, ANO) |>
    dplyr::summarise(value = dplyr::n(), .groups = "drop") |>
    as.data.frame() |>
    dplyr::group_by(ANO) |>
    dplyr::rename(DES_EDO_RES = DES_EDO.x) |>
    dplyr::mutate(CVE_EDO_RES = DES_EDO_RES) |>
    #dplyr::mutate(rank = rank(value, ties.method = "random"))|> 
    tidyr::nest() |>
    dplyr::mutate(rank = purrr::map(data,
                                    rank_cases)) |>
    dplyr::select(-data) |>
    tidyr::unnest(cols = c(rank)) |>
    dplyr::mutate(ANO = as.numeric(ANO)) |>
    as.data.frame()

y <- den2016_2022 |>
    dplyr::filter(!DES_EDO_RES %in% c("OTROS PAISES", 
                                      "OTROS PAISES DE LATINOAMERICA",
                                      "ESTADOS UNIDOS DE NORTEAMERICA")) |>
    dplyr::filter(DES_DIAG_FINAL %in% 
                      c("DENGUE CON SIGNOS DE ALARMA", 
                        "DENGUE NO GRAVE", 
                        "DENGUE GRAVE")) |>
    dplyr::group_by(DES_EDO_RES, ANO) |>
    dplyr::summarise(value = dplyr::n(), .groups = "drop") |>
    dplyr::group_by(ANO) |>
    dplyr::mutate(CVE_EDO_RES = DES_EDO_RES) |>
    #dplyr::mutate(rank = rank(value, ties.method = "random"))|> 
    tidyr::nest() |>
    dplyr::mutate(rank = purrr::map(data,
                                    rank_cases)) |>
    dplyr::select(-data) |>
    tidyr::unnest(cols = c(rank)) |>
    dplyr::mutate(ANO = as.numeric(ANO)) |>
    as.data.frame()


w <-  boldenr::read_dataset_bol(path = "~/Library/CloudStorage/OneDrive-Personal/datasets/DGE/arbo/",
                                     dataset = "sinave")  |>
    dplyr::filter(!DES_EDO_RES %in% c("OTROS PAISES", 
                                      "OTROS PAISES DE LATINOAMERICA",
                                      "ESTADOS UNIDOS DE NORTEAMERICA")) |>
    dplyr::filter(DES_DIAG_FINAL %in% 
                      c("DENGUE CON SIGNOS DE ALARMA", 
                        "DENGUE NO GRAVE", 
                        "DENGUE GRAVE")) |>
    dplyr::group_by(DES_EDO_RES, ANO) |>
    dplyr::summarise(value = dplyr::n(), .groups = "drop") |>
    dplyr::group_by(ANO) |>
    dplyr::mutate(CVE_EDO_RES = DES_EDO_RES) |>
    #dplyr::mutate(rank = rank(value, ties.method = "random"))|> 
    tidyr::nest() |>
    dplyr::mutate(rank = purrr::map(data,
                                    rank_cases)) |>
    dplyr::select(-data) |>
    tidyr::unnest(cols = c(rank)) |>
    dplyr::mutate(ANO = as.numeric(ANO)) |>
    as.data.frame()

zyw <- dplyr::bind_rows(z, y, w)

col <- viridis::magma(n = length(unique(zyw$CVE_EDO_RES)))
col[31]  <- "#2EB67D"


ggplot2::ggplot(data = zyw,
                ggplot2:::aes(ANO, 
                              rank, 
                              color = CVE_EDO_RES)) +
    ggplot2::geom_point(size = 4) +
    ggplot2::geom_text(data = zyw |> 
                           dplyr::filter(ANO == min(ANO)),
                       ggplot2::aes(x = ANO - .1, 
                                    label = CVE_EDO_RES), 
                       size = 1.5, 
                       nudge_x = -0.1,
                       hjust = 1) +
    ggplot2::geom_text(data = zyw |> 
                           dplyr::filter(ANO == max(ANO)),
                       ggplot2::aes(x = ANO + .1, 
                                    label = CVE_EDO_RES), 
                       size = 1.5, 
                       nudge_x = 0.1,
                       hjust = 0) +
    ggbump::geom_bump(size = 3, smooth = 8) +
    ggplot2::scale_x_continuous(breaks = seq(1, max(zyw$ANO), 1)) +
    cowplot::theme_minimal_grid(font_size = 14, 
                                line_size = 0) +
    ggplot2::theme(legend.position = "none",
                   panel.grid.major = ggplot2::element_blank()) +
    ggplot2::labs(y = "Posición de Casos Confirmados de Dengue",
                  x = "") +
    ggplot2::scale_y_reverse() +
    ggplot2::scale_color_manual(values = col)
```



## <span style="color:#003300;">Transmisión del Dengue en Yucatán</span>
<hr style="height:2px;border-width:0;color:#330019;background-color:#330019">

::: {layout-ncol="2"}
Yucatán
![Dengue en Yucatán](cases_by_week_year_edo.jpg)

Mérida
![Dengue en Mérida](cases_by_week_year_merida.jpg)

:::


## <span style="color:#003300;">Dengue por Grupos Etarios</span> ($\color{#2EB67D}{H}$ & $\color{#E01E5A}{M}$)

<hr style="height:2px;border-width:0;color:#330019;background-color:#330019">

```{r}
# Step 1. load the dengue dataset ####
load("~/OneDrive/automatic_read_sinave/8.RData/den/den2008_2022.RData")

# Step 2. load the function #####
source("~/Library/CloudStorage/Dropbox/r_developments/r_talks/2023/ssa_yucatan_talks/talks/vector_control_schools/piramyd_plot.R")

pyramid(x = den2016_2022,
        year = "2018")

```

 

##  <span style="color:#003300;">Dengue por Grupos Etarios</span> ($\color{#2EB67D}{H}$ & $\color{#E01E5A}{M}$)
<hr style="height:2px;border-width:0;color:#330019;background-color:#330019">

```{r}
# Step 1. load the dengue dataset ####
load("~/OneDrive/automatic_read_sinave/8.RData/den/den2008_2022.RData")

# Step 2. load the function #####
source("~/Library/CloudStorage/Dropbox/r_developments/r_talks/2023/ssa_yucatan_talks/talks/vector_control_schools/piramyd_plot.R")

pyramid(x = den2016_2022,
        year = "2022")

```


## <span style="color:#003300;">Identificación del Problema</span>
<hr style="height:2px;border-width:0;color:#330019;background-color:#330019">

- La distribución de la carga de la enfermedad por grupo etario de los casos de dengue del 2022 permite identificar que los grupos etarios entre 10 y 24 años de edad contribuyen con el 53% de la transmisión de dengue en el área urbana de Mérida.

- La carga de la enfermedad en grupos escolares obliga al sistema de salud a desarrollar e implemementar estrategias focalizadas de prevención y control del dengue.



## <span style="color:#003300;">Plan Estratégico</span>
<hr style="height:2px;border-width:0;color:#330019;background-color:#330019">


### Objetivo

- #### Reducir las abundancias del vector del dengue en las escuelas y áreas circundantes.


## <span style="color:#003300;">Fases del Plan Estratégico</span>
<hr style="height:2px;border-width:0;color:#330019;background-color:#330019">

```{r}
DiagrammeR::grViz("digraph {
                  
                  # graph definitions
  graph [layout = dot, rankdir = TB]
  
  # node definition
  node [shape = rectangle, style = filled, 
  color = grey, nodesep = .5,fixedsize = true, 
  width = 2.5] 
  
  # edge definition
  edge [color = grey, arrowhead = normal, arrowtail = dot]
  
  ##### Fase de Preparación
  
  subgraph cluster1 {
  
  # graph, node, and edge definitions
  node [fixedsize = true, width = 3, color =  '#E01E5A',]
  edge [color = grey, arrowhead = normal, arrowtail = dot]
  
  
  # 
  fase_preparacion [label = 'Fase de Preparación', fillcolor =  '#36C5F0', color = 'white', fontcolor = 'white']
  a_1 [label = 'Análisis Espacial',  fillcolor =  '#128C7E', color = 'white', fontcolor = 'white']
  b_1 [label = 'Vigilancia Entomológico',  fillcolor =  '#128C7E', color = 'white', fontcolor = 'white']
  c_1 [label = 'Datos Básicos',  fillcolor =  '#128C7E', color = 'white', fontcolor = 'white']
  d_1 [label = 'Actores Clave',  fillcolor =  '#128C7E', color = 'white', fontcolor = 'white']
  e_1 [label = 'Acciones de Control',  fillcolor =  '#128C7E', color = 'white', fontcolor = 'white']
  
  fase_preparacion -> a_1 -> b_1 -> c_1 -> d_1 -> e_1
  }

  ##### Fase de Ataque
  
  subgraph cluster2 {
  
  # graph, node, and edge definitions
  node [fixedsize = true, width = 3, color =  '#E01E5A',]
  edge [color = grey, arrowhead = normal, arrowtail = dot]
  
  # 
  fase_ataque [label = 'Fase de Ataque', fillcolor =  '#E01E5A', color = 'white', fontcolor = 'white']
  a_2 [label = 'Rociado & Control Larvario',  fillcolor =  '#128C7E', color = 'white', fontcolor = 'white']
  b_2 [label = 'Vigilancia Entomológica',  fillcolor =  '#128C7E', color = 'white', fontcolor = 'white']
  c_2 [label = 'Alfabetización del Dengue',  fillcolor =  '#128C7E', color = 'white', fontcolor = 'white']
  d_2 [label = 'Certificación de Escuelas',  fillcolor =  '#128C7E', color = 'white', fontcolor = 'white']
  e_2 [label = 'Evaluacion de Indicadores',  fillcolor =  '#128C7E', color = 'white', fontcolor = 'white']
  
  fase_ataque -> a_2 -> b_2 -> c_2 -> d_2 -> e_2
  }
  
  ##### Fase de Consolidación
  subgraph cluster3 {
  
  # graph, node, and edge definitions
  node [fixedsize = true, width = 3, color =  '#E01E5A',]
  edge [color = grey, arrowhead = normal, arrowtail = dot]
  
  
  # 
  fase_consolidacion [label = 'Fase de Consolidación', fillcolor =  '#ECB22E', color = 'white', fontcolor = 'white']
  a_3 [label = 'Vigilancia Entomológica',  fillcolor =  '#128C7E', color = 'white', fontcolor = 'white']
  b_3 [label = 'Reforzacimiento IRS & CL*',  fillcolor =  '#128C7E', color = 'white', fontcolor = 'white']
  c_3 [label = 'Reforzamiento Alfabetización*',  fillcolor =  '#128C7E', color = 'white', fontcolor = 'white']
  d_3 [label = 'Evaluacion de Indicadores',  fillcolor =  '#128C7E', color = 'white', fontcolor = 'white']
  
  fase_consolidacion -> a_3 -> b_3 -> c_3 -> d_3 
  }
  
  
  ##### Fase de Mantenimiento
  subgraph cluster4 {
  
  # graph, node, and edge definitions
  node [fixedsize = true, width = 3, color =  '#E01E5A',]
  edge [color = grey, arrowhead = normal, arrowtail = dot]
  
  
  # 
  fase_mantenimiento [label = 'Fase Mantenimiento', fillcolor =  '#36C5F0', color = 'white', fontcolor = 'white']
  a_4 [label = 'Vigilancia Entomológica',  fillcolor =  '#128C7E', color = 'white', fontcolor = 'white']
  b_4 [label = 'Reforzacimiento IRS & CL*',  fillcolor =  '#128C7E', color = 'white', fontcolor = 'white']
  c_4 [label = 'Reforzamiento Alfabetización*',  fillcolor =  '#128C7E', color = 'white', fontcolor = 'white']
  d_4 [label = 'Evaluacion de Indicadores',  fillcolor =  '#128C7E', color = 'white', fontcolor = 'white']
  
  fase_mantenimiento -> a_4 -> b_4 -> c_4 -> d_4 
  }
  
  ##### Fase de Evaluación y Escalamiento
  subgraph cluster5 {
  
  # graph, node, and edge definitions
  node [fixedsize = true, width = 3, color =  '#E01E5A',]
  edge [color = grey, arrowhead = normal, arrowtail = dot]
  
  
  # 
  fase_escalamiento [label = 'Escalamiento', fillcolor =  '#E01E5A', color = 'white', fontcolor = 'white']
  a_5 [label = 'Vigilancia Entomológica',  fillcolor =  '#128C7E', color = 'white', fontcolor = 'white']
  b_5 [label = 'Evaluacion de Indicadores',  fillcolor =  '#128C7E', color = 'white', fontcolor = 'white']
  c_5 [label = 'Escalamiento Local',  fillcolor =  '#128C7E', color = 'white', fontcolor = 'white']
  d_5 [label = 'Escalamiento Localidades Prioritarias',  fillcolor =  '#128C7E', color = 'white', fontcolor = 'white']
  
  fase_escalamiento -> a_5 -> b_5 -> c_5 -> d_5 
  }
  
  fases [label = 'Estrategía', 
  fillcolor =  '#075E54', 
  color = 'white', fontcolor = 'white']
  
  
  fases -> {fase_ataque  fase_preparacion fase_consolidacion fase_mantenimiento fase_escalamiento}              

  
}")

```


## <span style="color:#003300;">Fases de Preparación</span>
<hr style="height:2px;border-width:0;color:#330019;background-color:#330019">

- ### Hotspots de la Transmisión del Dengue

- ### Hotspots del Vector del Dengue

- ### Identificación de Escenarios Operativos

- ### Vigilancia Entomológica

- ### Acciones de Control


## <span style="color:#003300;">Hotspots de la Transmisión</span>
<hr style="height:2px;border-width:0;color:#330019;background-color:#330019">

![](hotspots.png)

## <span style="color:#003300;">Hotspots del Vector </span>
<hr style="height:2px;border-width:0;color:#330019;background-color:#330019">

::: {layout-ncol="1"}
![](hotspots_vector.png)
:::

## <span style="color:#003300;">Escenarios Operativos </span>
<hr style="height:2px;border-width:0;color:#330019;background-color:#330019">

::: {layout-ncol="2"}

![](risk_definition.png)

```{r, risk_map_merida, echo=FALSE}
source("~/Dropbox/r_developments/r_new_functions/3.Functions/risk_agebs.R")
source("~/Dropbox/r_developments/r_new_functions/3.Functions/risk_map.R")
# load the dengue cases hotspots
load("~/Dropbox/hotspots_2022/8.RData/cases_hotspots_agebs19.RData")
    hotspots <- cases_hotspots_agebs19 |>
    sf::st_make_valid()
    
# load the vector hotspots
load("~/OneDrive/proyects/hotspots_eggs/8.RData/31_yucatan/betas/31_yucatan_zinb1_betas.RData")
risk <- risk_agebs(spde_model = betas_31_yucatan,
                   hotspots = cases_hotspots_agebs19,
                   locality = "Mérida",
                   cve_ent = "31",
                   intensity_perc = 25)
risk_map(risk = risk, staticmap = FALSE)
```

:::


## <span style="color:#003300;">Escuelas Primarias & Secundarias </span>
<hr style="height:2px;border-width:0;color:#330019;background-color:#330019">


```{r map_risk, echo=FALSE, warning=FALSE, message=FALSE}
library(sf)
load("/Users/fdzul/Library/CloudStorage/OneDrive-Personal/proyects/colaboraciones/nacionales/ssa_yucatan/schools/8.RData/schools_risk.RData")
xa <- schools_risk |>
    dplyr::filter(risk == "Muy Alto Riesgo") |>
    dplyr::filter(nombre_act %in% c("Escuelas de educación primaria del sector público"))

xb <- schools_risk |>
    dplyr::filter(risk == "Muy Alto Riesgo") |>
    dplyr::filter(nombre_act %in% c("Escuelas de educación secundaria general del sector público",
                                    "Escuelas de educación secundaria técnica del sector público"))
mapview::mapview(schools_risk |>
                         dplyr::filter(risk != "Muy Alto Riesgo"),
                     layer.name = "Escuelas",
                     col.regions = "gray80",
                     color = "white",
                     alpha = 0.3,
                     cex = 3,
                     legend = FALSE) +
    mapview::mapview(xa,
                 col.regions = "red",
                 color = "white",
                 layer.name = "Escuelas Primarias",
                 legend = TRUE) +
    mapview::mapview(xb,
                     col.regions = "green",
                     color = "white",
                     #cex = 4,
                     layer.name = "Escuelas Secundarias",
                     legend = TRUE)
```


## <span style="color:#003300;">Escuelas Primarias & Secundarias </span>
<hr style="height:2px;border-width:0;color:#330019;background-color:#330019">


```{r map_risk_public_schools, echo=FALSE, warning=FALSE, message=FALSE}
library(sf)
load("/Users/fdzul/Library/CloudStorage/OneDrive-Personal/proyects/colaboraciones/nacionales/ssa_yucatan/schools/8.RData/schools_risk.RData")
# Step 2. extract the public schools ####
x <- schools_risk |>
    dplyr::filter(risk == "Muy Alto Riesgo") |>
    dplyr::filter(nombre_act == "Escuelas de educación primaria del sector público")


# Step 3. load the blocks ine ####
y <- rgeomex::blocks_ine20_mx_e |>
    dplyr::filter(entidad == "31")


# Step 4. create the buffer of 200 m ####
x_buffer <- sf::st_buffer(x = x, 
                          dist = 200) 

# Step 5. extract the schools
y_manza_schools <- y[x_buffer, ] 


mapview::mapview(y_manza_schools,
                                color = "red",
                                col.regions = "red",
                                alpha.regions = 0.3,
                                layer.name = "Manzanas dentro zona Buffer",
                                alpha = 0.1)  +
    mapview::mapview(x_buffer,
                     color = "black",
                     col.regions = "white",
                     alpha = 0.1,
                     layer.name = "Buffer de 200 m",
                     alpha.regions = 0.5) +
    mapview::mapview(x,
                     layer.name = "Escuela Primaria Pública",
                     col.regions = "black") 
```

## <span style="color:#003300;">Datos Básicos</span>
<hr style="height:2px;border-width:0;color:#330019;background-color:#330019">

```{r datos_basicos, echo=FALSE, warning=FALSE, message=FALSE}
tibble::tibble("Escuela" = c("Primarias", "Secundaria", "Resto"),
               "Número de Escuelas" = c(71, 14, 1816),
               "Manzanas" = c(915, 161, 14298),
               "Poblacion Estimada" = c(915*20, 161*20, 14298*20)) |>
    kableExtra::kable(caption = "Área de Alto Riesgo") |>
    kableExtra::kable_classic()

```

## <span style="color:#003300;">Vigilancia Entomológica</span>
<hr style="height:2px;border-width:0;color:#330019;background-color:#330019">


## Dios Botic!
<hr style="height:2px;border-width:0;color:#330019;background-color:#330019">
&nbsp;

- ***Bio*** : https://fdzul.github.io/web_site_fadm/

- ***email***       :     [felipe.dzul.m@gmail.com]()

- ***celular***     :     [8139945623]()

- ***slides***:     https://joyful-palmier-ec5e33.netlify.app/talks/vector_control_schools/#/



::: aside
La presentación fue creada via [**Quarto**](https://quarto.org)
[**revealjs**](https://revealjs.com/),
[remark.js](https://remarkjs.com),
& [R Markdown](https://rmarkdown.rstudio.com) en [R]() & [RStudio](2.R_Scripts/libs/rstudio_leaflet/rstudio_leaflet.css).
:::